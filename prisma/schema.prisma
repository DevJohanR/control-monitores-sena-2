// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model Instructor {
  idInstructor     Int       @id @default(autoincrement())
  nombreInstructor String    @unique
  horarios         Horario[] 
  user             User?      @relation(fields: [userId], references: [id])
  userId           Int?       @unique
}

model Horario {
  idHorario        Int       @id @default(autoincrement())
  nombrePrograma   String
  numeroFicha      String
  competencia      String
  ra               String
  nombreAmbiente   String
  bloque           String
  sede             String
  jornada          String
  diaSemana        String
  numeroTrimestre  Int
  anoTrimestre     Int
  horaInicio       DateTime
  horaFin          DateTime
  idInstructor     Int
  instructor       Instructor  @relation(fields: [idInstructor], references: [idInstructor])
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String
  role         Role      @relation(fields: [roleId], references: [id])
  roleId       Int
  instructor   Instructor?
  instructorId Int?
}

model Role {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users User[]
}

model Programa {
  idPrograma     Int           @id @default(autoincrement())
  nombrePrograma String
  competencias   Competencia[] 
}

model Competencia {
  idCompetencia     Int           @id @default(autoincrement())
  nombreCompetencia String
  programa          Programa      @relation(fields: [programaId], references: [idPrograma])
  programaId        Int
  ra                RA[]
}

  model RA {
    idRA             Int         @id @default(autoincrement())
    descripcionRA    String
      acronimoRA    String?      // Nuevo campo para el acr√≥nimo

    competencia      Competencia @relation(fields: [competenciaId], references: [idCompetencia])
    competenciaId    Int
  }


model Archivo {
  id      Int     @id @default(autoincrement())
  nombre  String
  ruta    String
  programaPerteneciente String?
  creado  DateTime @default(now())
}


model Ficha {
  idFicha        Int    @id @default(autoincrement())
  numeroFicha    String
 
}